"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _dev = await jitiImport("@caido-community/dev");
var _pluginVue = _interopRequireDefault(await jitiImport("@vitejs/plugin-vue"));
var _tailwindcss = _interopRequireDefault(await jitiImport("tailwindcss"));

var _tailwindcssPrimeui = _interopRequireDefault(await jitiImport("tailwindcss-primeui"));
var _tailwindcss2 = _interopRequireDefault(await jitiImport("@caido/tailwindcss"));
var _path = _interopRequireDefault(await jitiImport("path"));
var _postcssPrefixwrap = _interopRequireDefault(await jitiImport("postcss-prefixwrap"));function _interopRequireDefault(e) {return e && e.__esModule ? e : { default: e };} // @ts-expect-error no declared types at this time

const id = "frontend-vue";var _default = exports.default =
(0, _dev.defineConfig)({
  id,
  name: "JSHunter",
  description: "JSHunter",
  version: "0.0.0",
  author: {
    name: "Caido Labs Inc.",
    email: "dev@caido.io",
    url: "https://caido.io"
  },
  plugins: [
  {
    kind: "backend",
    id: "backend",
    root: "packages/backend"
  },
  {
    kind: 'frontend',
    id: "frontend",
    root: 'packages/frontend',
    backend: {
      id: "backend"
    },
    vite: {
      plugins: [(0, _pluginVue.default)()],
      build: {
        rollupOptions: {
          external: [
          '@caido/frontend-sdk',
          "@codemirror/state",
          "@codemirror/view",
          "@codemirror/autocomplete",
          "@codemirror/commands",
          "@codemirror/lint",
          "@codemirror/search",
          "@codemirror/language",
          "@lezer/common",
          "@lezer/highlight",
          "@lezer/lr"]

        }
      },
      resolve: {
        alias: [
        {
          find: "@",
          replacement: _path.default.resolve(__dirname, "packages/frontend/src")
        }]

      },
      css: {
        postcss: {
          plugins: [
          // This plugin wraps the root element in a unique ID
          // This is necessary to prevent styling conflicts between plugins
          (0, _postcssPrefixwrap.default)(`#plugin--${id}`),

          (0, _tailwindcss.default)({
            corePlugins: {
              preflight: false
            },
            content: [
            './packages/frontend/src/**/*.{vue,ts}',
            './node_modules/@caido/primevue/dist/primevue.mjs'],

            // Check the [data-mode="dark"] attribute on the <html> element to determine the mode
            // This attribute is set in the Caido core application
            darkMode: ["selector", '[data-mode="dark"]'],
            plugins: [

            // This plugin injects the necessary Tailwind classes for PrimeVue components
            _tailwindcssPrimeui.default,

            // This plugin injects the necessary Tailwind classes for the Caido theme
            _tailwindcss2.default]

          })]

        }
      }
    }
  }]

}); /* v9-9197f2b6d15faa08 */
